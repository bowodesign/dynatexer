{
	loop: 1, // default: 1,
	content: [
		{
			animation: 'additive', // default: additive | opciones: additive, replace
			delay: 100, // default: 0 el delay es anterior a la animación.
			placeholder: '<span class="console_text">', // default: '<span>'
			render_strategy: 'text-by-char', // default: text-one-shot | opciones: text-by-char, text-by-line, text-one-shot, iterator, array-items
			items: "Este es un texto a mostrar\nQue está en varias líneas.\nLa animación actual es por caracter." // default: '' | opciones: string, objeto con método toString()
		},
		{
			animation: 'additive',
			delay: 100,
			render_strategy: 'text-by-line',
			items: "Este es un texto a mostrar\nQue está en varias líneas.\nLa animación actual es línea por línea."
		},
		{
			render_strategy: 'text-one-shot',
			items: "Este es un texto a mostrar\nQue está en varias líneas.\nNo tiene animación, se muestra\ninstantáneamente luego de mostrar el contenido anterior."
		},
		{
			animation: 'replace',
			delay: 100,
			render_strategy: 'array-items',
			items: ["item1", "item2", "item3"]
		},
		{
			animation: 'additive',
			delay: 100,
			render_strategy: 'iterator',
			items: {
				iterator: function() {
					return {
						has_next: function() {
							// devuelve booleano indicando si quedan elementos
						},
						next: function() {
							// devuelve string u objeto con método toString()
						}
					}
				}
			}
		}
	],
	cursor: { // es igual que un content pero la animación se realiza en paralelo y es cíclica. Solo se admite un contenido y siempre es el último elemento.
		loop: 'infinite', // la opción por default es infinite. Esta opción es válida para el cursor pero no para los contents
		animation: 'replace', // default para el cursor
		delay: 500,
		placeholder: '<span class="cursor">',
		render_strategy: 'array-items',
		items: ['&nbsp;', '']
	}
}
